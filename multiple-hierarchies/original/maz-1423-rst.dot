digraph  {
	node [label="\N"];
	"rst:7_0"	 [label=Je,
		layers="set(['rst', 'rst:token'])",
		"rst:token"=Je];
	1	 [label="rst:segment:1",
		layers="set(['rst', 'rst:segment'])",
		"rst:text"="Zum Angewöhnen"];
	"rst:1_1"	 [label=Angewöhnen,
		layers="set(['rst', 'rst:token'])",
		"rst:token"=Angewöhnen];
	1 -> "rst:1_1" [key=0,
	edge_type=spans,
	layers="set(['rst', 'rst:token'])"];
"rst:1_0" [label=Zum,
	layers="set(['rst', 'rst:token'])",
	"rst:token"=Zum];
1 -> "rst:1_0" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
2 [label="rst:segment:2",
layers="set(['rst', 'rst:segment'])",
"rst:text"="Bei der jüngsten Sitzung haben die Stadtverordneten entschieden ."];
"rst:2_7" [label=entschieden,
layers="set(['rst', 'rst:token'])",
"rst:token"=entschieden];
2 -> "rst:2_7" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:2_5" [label=die,
layers="set(['rst', 'rst:token'])",
"rst:token"=die];
2 -> "rst:2_5" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:2_4" [label=haben,
layers="set(['rst', 'rst:token'])",
"rst:token"=haben];
2 -> "rst:2_4" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:2_8" [label=".",
layers="set(['rst', 'rst:token'])",
"rst:token"="."];
2 -> "rst:2_8" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:2_3" [label=Sitzung,
layers="set(['rst', 'rst:token'])",
"rst:token"=Sitzung];
2 -> "rst:2_3" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:2_2" [label=jüngsten,
layers="set(['rst', 'rst:token'])",
"rst:token"=jüngsten];
2 -> "rst:2_2" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:2_1" [label=der,
layers="set(['rst', 'rst:token'])",
"rst:token"=der];
2 -> "rst:2_1" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:2_0" [label=Bei,
layers="set(['rst', 'rst:token'])",
"rst:token"=Bei];
2 -> "rst:2_0" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:2_6" [label=Stadtverordneten,
layers="set(['rst', 'rst:token'])",
"rst:token"=Stadtverordneten];
2 -> "rst:2_6" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
3 [label="rst:segment:3",
layers="set(['rst', 'rst:segment'])",
"rst:text"="Vor allem kommerzielle Veranstalter werden ab 2002 gut zur Kasse gebeten ."];
"rst:3_3" [label=Veranstalter,
layers="set(['rst', 'rst:token'])",
"rst:token"=Veranstalter];
3 -> "rst:3_3" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:3_1" [label=allem,
layers="set(['rst', 'rst:token'])",
"rst:token"=allem];
3 -> "rst:3_1" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:3_10" [label=gebeten,
layers="set(['rst', 'rst:token'])",
"rst:token"=gebeten];
3 -> "rst:3_10" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:3_2" [label=kommerzielle,
layers="set(['rst', 'rst:token'])",
"rst:token"=kommerzielle];
3 -> "rst:3_2" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:3_11" [label=".",
layers="set(['rst', 'rst:token'])",
"rst:token"="."];
3 -> "rst:3_11" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:3_0" [label=Vor,
layers="set(['rst', 'rst:token'])",
"rst:token"=Vor];
3 -> "rst:3_0" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:3_6" [label=2002,
layers="set(['rst', 'rst:token'])",
"rst:token"=2002];
3 -> "rst:3_6" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:3_5" [label=ab,
layers="set(['rst', 'rst:token'])",
"rst:token"=ab];
3 -> "rst:3_5" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:3_4" [label=werden,
layers="set(['rst', 'rst:token'])",
"rst:token"=werden];
3 -> "rst:3_4" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:3_7" [label=gut,
layers="set(['rst', 'rst:token'])",
"rst:token"=gut];
3 -> "rst:3_7" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:3_8" [label=zur,
layers="set(['rst', 'rst:token'])",
"rst:token"=zur];
3 -> "rst:3_8" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:3_9" [label=Kasse,
layers="set(['rst', 'rst:token'])",
"rst:token"=Kasse];
3 -> "rst:3_9" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
4 [label="rst:segment:4",
layers="set(['rst', 'rst:segment'])",
"rst:text"="Die Einnahmen sind dennoch nur ein Tropfen auf den heißen Stein ."];
"rst:4_5" [label=ein,
layers="set(['rst', 'rst:token'])",
"rst:token"=ein];
4 -> "rst:4_5" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:4_4" [label=nur,
layers="set(['rst', 'rst:token'])",
"rst:token"=nur];
4 -> "rst:4_4" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:4_6" [label=Tropfen,
layers="set(['rst', 'rst:token'])",
"rst:token"=Tropfen];
4 -> "rst:4_6" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:4_8" [label=den,
layers="set(['rst', 'rst:token'])",
"rst:token"=den];
4 -> "rst:4_8" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:4_9" [label=heißen,
layers="set(['rst', 'rst:token'])",
"rst:token"=heißen];
4 -> "rst:4_9" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:4_0" [label=Die,
layers="set(['rst', 'rst:token'])",
"rst:token"=Die];
4 -> "rst:4_0" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:4_1" [label=Einnahmen,
layers="set(['rst', 'rst:token'])",
"rst:token"=Einnahmen];
4 -> "rst:4_1" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:4_2" [label=sind,
layers="set(['rst', 'rst:token'])",
"rst:token"=sind];
4 -> "rst:4_2" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:4_3" [label=dennoch,
layers="set(['rst', 'rst:token'])",
"rst:token"=dennoch];
4 -> "rst:4_3" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:4_7" [label=auf,
layers="set(['rst', 'rst:token'])",
"rst:token"=auf];
4 -> "rst:4_7" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:4_11" [label=".",
layers="set(['rst', 'rst:token'])",
"rst:token"="."];
4 -> "rst:4_11" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:4_10" [label=Stein,
layers="set(['rst', 'rst:token'])",
"rst:token"=Stein];
4 -> "rst:4_10" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
5 [label="rst:segment:5",
layers="set(['rst', 'rst:segment'])",
"rst:text"="Die Betriebskosten für den schmucken Veranstaltungsort sind hoch ."];
"rst:5_2" [label=für,
layers="set(['rst', 'rst:token'])",
"rst:token"=für];
5 -> "rst:5_2" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:5_8" [label=".",
layers="set(['rst', 'rst:token'])",
"rst:token"="."];
5 -> "rst:5_8" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:5_7" [label=hoch,
layers="set(['rst', 'rst:token'])",
"rst:token"=hoch];
5 -> "rst:5_7" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:5_6" [label=sind,
layers="set(['rst', 'rst:token'])",
"rst:token"=sind];
5 -> "rst:5_6" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:5_4" [label=schmucken,
layers="set(['rst', 'rst:token'])",
"rst:token"=schmucken];
5 -> "rst:5_4" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:5_5" [label=Veranstaltungsort,
layers="set(['rst', 'rst:token'])",
"rst:token"=Veranstaltungsort];
5 -> "rst:5_5" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
5 -> 4 [key=0,
edge_type=dominates,
label="rst:evidence",
layers="set(['rst', 'rst:relation'])",
relname="rst:evidence"];
"rst:5_0" [label=Die,
layers="set(['rst', 'rst:token'])",
"rst:token"=Die];
5 -> "rst:5_0" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:5_1" [label=Betriebskosten,
layers="set(['rst', 'rst:token'])",
"rst:token"=Betriebskosten];
5 -> "rst:5_1" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:5_3" [label=den,
layers="set(['rst', 'rst:token'])",
"rst:token"=den];
5 -> "rst:5_3" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
6 [label="rst:segment:6",
layers="set(['rst', 'rst:segment'])",
"rst:text"="Jetzt wird es darum gehen , die Halle so oft wie möglich zu füllen ."];
"rst:6_9" [label=oft,
layers="set(['rst', 'rst:token'])",
"rst:token"=oft];
6 -> "rst:6_9" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:6_10" [label=wie,
layers="set(['rst', 'rst:token'])",
"rst:token"=wie];
6 -> "rst:6_10" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:6_6" [label=die,
layers="set(['rst', 'rst:token'])",
"rst:token"=die];
6 -> "rst:6_6" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:6_14" [label=".",
layers="set(['rst', 'rst:token'])",
"rst:token"="."];
6 -> "rst:6_14" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:6_11" [label=möglich,
layers="set(['rst', 'rst:token'])",
"rst:token"=möglich];
6 -> "rst:6_11" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:6_2" [label=es,
layers="set(['rst', 'rst:token'])",
"rst:token"=es];
6 -> "rst:6_2" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:6_7" [label=Halle,
layers="set(['rst', 'rst:token'])",
"rst:token"=Halle];
6 -> "rst:6_7" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:6_4" [label=gehen,
layers="set(['rst', 'rst:token'])",
"rst:token"=gehen];
6 -> "rst:6_4" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:6_8" [label=so,
layers="set(['rst', 'rst:token'])",
"rst:token"=so];
6 -> "rst:6_8" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:6_5" [label=",",
layers="set(['rst', 'rst:token'])",
"rst:token"=","];
6 -> "rst:6_5" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:6_0" [label=Jetzt,
layers="set(['rst', 'rst:token'])",
"rst:token"=Jetzt];
6 -> "rst:6_0" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:6_1" [label=wird,
layers="set(['rst', 'rst:token'])",
"rst:token"=wird];
6 -> "rst:6_1" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:6_3" [label=darum,
layers="set(['rst', 'rst:token'])",
"rst:token"=darum];
6 -> "rst:6_3" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:6_13" [label=füllen,
layers="set(['rst', 'rst:token'])",
"rst:token"=füllen];
6 -> "rst:6_13" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:6_12" [label=zu,
layers="set(['rst', 'rst:token'])",
"rst:token"=zu];
6 -> "rst:6_12" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
7 [label="rst:segment:7",
layers="set(['rst', 'rst:segment'])",
"rst:text"="Je mehr Veranstaltungen stattfinden ,"];
"rst:7_2" [label=Veranstaltungen,
layers="set(['rst', 'rst:token'])",
"rst:token"=Veranstaltungen];
7 -> "rst:7_2" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:7_3" [label=stattfinden,
layers="set(['rst', 'rst:token'])",
"rst:token"=stattfinden];
7 -> "rst:7_3" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:7_4" [label=",",
layers="set(['rst', 'rst:token'])",
"rst:token"=","];
7 -> "rst:7_4" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:7_1" [label=mehr,
layers="set(['rst', 'rst:token'])",
"rst:token"=mehr];
7 -> "rst:7_1" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
7 -> "rst:7_0" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
8 [label="rst:segment:8",
layers="set(['rst', 'rst:segment'])",
"rst:text"="Die Halle muss ausgelastet sein ."];
"rst:8_2" [label=muss,
layers="set(['rst', 'rst:token'])",
"rst:token"=muss];
8 -> "rst:8_2" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:8_1" [label=Halle,
layers="set(['rst', 'rst:token'])",
"rst:token"=Halle];
8 -> "rst:8_1" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:8_5" [label=".",
layers="set(['rst', 'rst:token'])",
"rst:token"="."];
8 -> "rst:8_5" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:8_4" [label=sein,
layers="set(['rst', 'rst:token'])",
"rst:token"=sein];
8 -> "rst:8_4" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:8_0" [label=Die,
layers="set(['rst', 'rst:token'])",
"rst:token"=Die];
8 -> "rst:8_0" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:8_3" [label=ausgelastet,
layers="set(['rst', 'rst:token'])",
"rst:token"=ausgelastet];
8 -> "rst:8_3" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
19 [label="rst:group:span:19",
layers="set(['rst', 'rst:segment'])",
"rst:reltype"=span];
8 -> 19 [key=0,
edge_type=dominates,
label="rst:summary",
layers="set(['rst', 'rst:relation'])",
relname="rst:summary"];
9 [label="rst:segment:9",
layers="set(['rst', 'rst:segment'])",
"rst:text"="Und in der Region gibt es Konkurrenz ."];
"rst:9_3" [label=Region,
layers="set(['rst', 'rst:token'])",
"rst:token"=Region];
9 -> "rst:9_3" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:9_4" [label=gibt,
layers="set(['rst', 'rst:token'])",
"rst:token"=gibt];
9 -> "rst:9_4" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:9_7" [label=".",
layers="set(['rst', 'rst:token'])",
"rst:token"="."];
9 -> "rst:9_7" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:9_5" [label=es,
layers="set(['rst', 'rst:token'])",
"rst:token"=es];
9 -> "rst:9_5" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:9_6" [label=Konkurrenz,
layers="set(['rst', 'rst:token'])",
"rst:token"=Konkurrenz];
9 -> "rst:9_6" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:9_1" [label=in,
layers="set(['rst', 'rst:token'])",
"rst:token"=in];
9 -> "rst:9_1" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:9_0" [label=Und,
layers="set(['rst', 'rst:token'])",
"rst:token"=Und];
9 -> "rst:9_0" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:9_2" [label=der,
layers="set(['rst', 'rst:token'])",
"rst:token"=der];
9 -> "rst:9_2" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
10 [label="rst:segment:10",
layers="set(['rst', 'rst:segment'])",
"rst:text"="Auch die Nachbarstädte bieten Veranstaltern genügend Platz ."];
"rst:10_3" [label=bieten,
layers="set(['rst', 'rst:token'])",
"rst:token"=bieten];
10 -> "rst:10_3" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:10_0" [label=Auch,
layers="set(['rst', 'rst:token'])",
"rst:token"=Auch];
10 -> "rst:10_0" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:10_2" [label=Nachbarstädte,
layers="set(['rst', 'rst:token'])",
"rst:token"=Nachbarstädte];
10 -> "rst:10_2" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
10 -> 9 [key=0,
edge_type=dominates,
label="rst:evidence",
layers="set(['rst', 'rst:relation'])",
relname="rst:evidence"];
"rst:10_1" [label=die,
layers="set(['rst', 'rst:token'])",
"rst:token"=die];
10 -> "rst:10_1" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:10_6" [label=Platz,
layers="set(['rst', 'rst:token'])",
"rst:token"=Platz];
10 -> "rst:10_6" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:10_5" [label=genügend,
layers="set(['rst', 'rst:token'])",
"rst:token"=genügend];
10 -> "rst:10_5" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:10_4" [label=Veranstaltern,
layers="set(['rst', 'rst:token'])",
"rst:token"=Veranstaltern];
10 -> "rst:10_4" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:10_7" [label=".",
layers="set(['rst', 'rst:token'])",
"rst:token"="."];
10 -> "rst:10_7" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
11 [label="rst:segment:11",
layers="set(['rst', 'rst:segment'])",
"rst:text"="Wittstock dagegen muss sich erst einen Namen machen ."];
"rst:11_5" [label=einen,
layers="set(['rst', 'rst:token'])",
"rst:token"=einen];
11 -> "rst:11_5" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:11_1" [label=dagegen,
layers="set(['rst', 'rst:token'])",
"rst:token"=dagegen];
11 -> "rst:11_1" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:11_4" [label=erst,
layers="set(['rst', 'rst:token'])",
"rst:token"=erst];
11 -> "rst:11_4" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:11_8" [label=".",
layers="set(['rst', 'rst:token'])",
"rst:token"="."];
11 -> "rst:11_8" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:11_7" [label=machen,
layers="set(['rst', 'rst:token'])",
"rst:token"=machen];
11 -> "rst:11_7" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:11_2" [label=muss,
layers="set(['rst', 'rst:token'])",
"rst:token"=muss];
11 -> "rst:11_2" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:11_3" [label=sich,
layers="set(['rst', 'rst:token'])",
"rst:token"=sich];
11 -> "rst:11_3" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:11_0" [label=Wittstock,
layers="set(['rst', 'rst:token'])",
"rst:token"=Wittstock];
11 -> "rst:11_0" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:11_6" [label=Namen,
layers="set(['rst', 'rst:token'])",
"rst:token"=Namen];
11 -> "rst:11_6" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
12 [label="rst:segment:12",
layers="set(['rst', 'rst:segment'])",
"rst:text"="Das Oktoberfest hat gezeigt , dass es eine Anlaufzeit braucht ."];
"rst:12_3" [label=gezeigt,
layers="set(['rst', 'rst:token'])",
"rst:token"=gezeigt];
12 -> "rst:12_3" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:12_5" [label=dass,
layers="set(['rst', 'rst:token'])",
"rst:token"=dass];
12 -> "rst:12_5" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:12_10" [label=".",
layers="set(['rst', 'rst:token'])",
"rst:token"="."];
12 -> "rst:12_10" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:12_4" [label=",",
layers="set(['rst', 'rst:token'])",
"rst:token"=","];
12 -> "rst:12_4" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:12_9" [label=braucht,
layers="set(['rst', 'rst:token'])",
"rst:token"=braucht];
12 -> "rst:12_9" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:12_7" [label=eine,
layers="set(['rst', 'rst:token'])",
"rst:token"=eine];
12 -> "rst:12_7" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:12_2" [label=hat,
layers="set(['rst', 'rst:token'])",
"rst:token"=hat];
12 -> "rst:12_2" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:12_6" [label=es,
layers="set(['rst', 'rst:token'])",
"rst:token"=es];
12 -> "rst:12_6" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:12_0" [label=Das,
layers="set(['rst', 'rst:token'])",
"rst:token"=Das];
12 -> "rst:12_0" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:12_1" [label=Oktoberfest,
layers="set(['rst', 'rst:token'])",
"rst:token"=Oktoberfest];
12 -> "rst:12_1" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:12_8" [label=Anlaufzeit,
layers="set(['rst', 'rst:token'])",
"rst:token"=Anlaufzeit];
12 -> "rst:12_8" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
13 [label="rst:segment:13",
layers="set(['rst', 'rst:segment'])",
"rst:text"="Die Gäste aus nah und fern müssen sich erst daran gewöhnen , nach Wittstock u\
nd Richtung Gymnasium zu pilgern ."];
"rst:13_7" [label=sich,
layers="set(['rst', 'rst:token'])",
"rst:token"=sich];
13 -> "rst:13_7" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:13_18" [label=pilgern,
layers="set(['rst', 'rst:token'])",
"rst:token"=pilgern];
13 -> "rst:13_18" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:13_16" [label=Gymnasium,
layers="set(['rst', 'rst:token'])",
"rst:token"=Gymnasium];
13 -> "rst:13_16" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:13_2" [label=aus,
layers="set(['rst', 'rst:token'])",
"rst:token"=aus];
13 -> "rst:13_2" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:13_9" [label=daran,
layers="set(['rst', 'rst:token'])",
"rst:token"=daran];
13 -> "rst:13_9" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:13_5" [label=fern,
layers="set(['rst', 'rst:token'])",
"rst:token"=fern];
13 -> "rst:13_5" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:13_4" [label=und,
layers="set(['rst', 'rst:token'])",
"rst:token"=und];
13 -> "rst:13_4" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:13_13" [label=Wittstock,
layers="set(['rst', 'rst:token'])",
"rst:token"=Wittstock];
13 -> "rst:13_13" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:13_19" [label=".",
layers="set(['rst', 'rst:token'])",
"rst:token"="."];
13 -> "rst:13_19" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:13_11" [label=",",
layers="set(['rst', 'rst:token'])",
"rst:token"=","];
13 -> "rst:13_11" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:13_8" [label=erst,
layers="set(['rst', 'rst:token'])",
"rst:token"=erst];
13 -> "rst:13_8" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:13_1" [label=Gäste,
layers="set(['rst', 'rst:token'])",
"rst:token"=Gäste];
13 -> "rst:13_1" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:13_6" [label=müssen,
layers="set(['rst', 'rst:token'])",
"rst:token"=müssen];
13 -> "rst:13_6" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:13_10" [label=gewöhnen,
layers="set(['rst', 'rst:token'])",
"rst:token"=gewöhnen];
13 -> "rst:13_10" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:13_12" [label=nach,
layers="set(['rst', 'rst:token'])",
"rst:token"=nach];
13 -> "rst:13_12" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:13_14" [label=und,
layers="set(['rst', 'rst:token'])",
"rst:token"=und];
13 -> "rst:13_14" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:13_15" [label=Richtung,
layers="set(['rst', 'rst:token'])",
"rst:token"=Richtung];
13 -> "rst:13_15" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:13_0" [label=Die,
layers="set(['rst', 'rst:token'])",
"rst:token"=Die];
13 -> "rst:13_0" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:13_17" [label=zu,
layers="set(['rst', 'rst:token'])",
"rst:token"=zu];
13 -> "rst:13_17" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
13 -> 12 [key=0,
edge_type=dominates,
label="rst:reason",
layers="set(['rst', 'rst:relation'])",
relname="rst:reason"];
"rst:13_3" [label=nah,
layers="set(['rst', 'rst:token'])",
"rst:token"=nah];
13 -> "rst:13_3" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
14 [label="rst:segment:14",
layers="set(['rst', 'rst:segment'])",
"rst:text"="Fest steht , dass die Dosse-Stadt als Mittelzentrum ohne einen ansehnlichen Vera\
nstaltungsort mit ausreichend Platz fürs Publikum nicht auskommt ."];
"rst:14_1" [label=steht,
layers="set(['rst', 'rst:token'])",
"rst:token"=steht];
14 -> "rst:14_1" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:14_14" [label=Platz,
layers="set(['rst', 'rst:token'])",
"rst:token"=Platz];
14 -> "rst:14_14" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:14_19" [label=".",
layers="set(['rst', 'rst:token'])",
"rst:token"="."];
14 -> "rst:14_19" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:14_3" [label=dass,
layers="set(['rst', 'rst:token'])",
"rst:token"=dass];
14 -> "rst:14_3" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:14_2" [label=",",
layers="set(['rst', 'rst:token'])",
"rst:token"=","];
14 -> "rst:14_2" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:14_18" [label=auskommt,
layers="set(['rst', 'rst:token'])",
"rst:token"=auskommt];
14 -> "rst:14_18" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:14_12" [label=mit,
layers="set(['rst', 'rst:token'])",
"rst:token"=mit];
14 -> "rst:14_12" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:14_6" [label=als,
layers="set(['rst', 'rst:token'])",
"rst:token"=als];
14 -> "rst:14_6" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:14_15" [label=fürs,
layers="set(['rst', 'rst:token'])",
"rst:token"=fürs];
14 -> "rst:14_15" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:14_16" [label=Publikum,
layers="set(['rst', 'rst:token'])",
"rst:token"=Publikum];
14 -> "rst:14_16" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:14_8" [label=ohne,
layers="set(['rst', 'rst:token'])",
"rst:token"=ohne];
14 -> "rst:14_8" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:14_9" [label=einen,
layers="set(['rst', 'rst:token'])",
"rst:token"=einen];
14 -> "rst:14_9" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:14_4" [label=die,
layers="set(['rst', 'rst:token'])",
"rst:token"=die];
14 -> "rst:14_4" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:14_7" [label=Mittelzentrum,
layers="set(['rst', 'rst:token'])",
"rst:token"=Mittelzentrum];
14 -> "rst:14_7" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:14_5" [label="Dosse-Stadt",
layers="set(['rst', 'rst:token'])",
"rst:token"="Dosse-Stadt"];
14 -> "rst:14_5" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:14_17" [label=nicht,
layers="set(['rst', 'rst:token'])",
"rst:token"=nicht];
14 -> "rst:14_17" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:14_11" [label=Veranstaltungsort,
layers="set(['rst', 'rst:token'])",
"rst:token"=Veranstaltungsort];
14 -> "rst:14_11" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:14_0" [label=Fest,
layers="set(['rst', 'rst:token'])",
"rst:token"=Fest];
14 -> "rst:14_0" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:14_10" [label=ansehnlichen,
layers="set(['rst', 'rst:token'])",
"rst:token"=ansehnlichen];
14 -> "rst:14_10" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:14_13" [label=ausreichend,
layers="set(['rst', 'rst:token'])",
"rst:token"=ausreichend];
14 -> "rst:14_13" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
15 [label="rst:segment:15",
layers="set(['rst', 'rst:segment'])",
"rst:text"="Ohne die Halle würde Wittstock bald ins Hintertreffen geraten ."];
"rst:15_2" [label=Halle,
layers="set(['rst', 'rst:token'])",
"rst:token"=Halle];
15 -> "rst:15_2" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:15_8" [label=geraten,
layers="set(['rst', 'rst:token'])",
"rst:token"=geraten];
15 -> "rst:15_8" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:15_1" [label=die,
layers="set(['rst', 'rst:token'])",
"rst:token"=die];
15 -> "rst:15_1" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:15_9" [label=".",
layers="set(['rst', 'rst:token'])",
"rst:token"="."];
15 -> "rst:15_9" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:15_0" [label=Ohne,
layers="set(['rst', 'rst:token'])",
"rst:token"=Ohne];
15 -> "rst:15_0" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
15 -> 14 [key=0,
edge_type=dominates,
label="rst:restatement",
layers="set(['rst', 'rst:relation'])",
relname="rst:restatement"];
"rst:15_3" [label=würde,
layers="set(['rst', 'rst:token'])",
"rst:token"=würde];
15 -> "rst:15_3" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:15_4" [label=Wittstock,
layers="set(['rst', 'rst:token'])",
"rst:token"=Wittstock];
15 -> "rst:15_4" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:15_5" [label=bald,
layers="set(['rst', 'rst:token'])",
"rst:token"=bald];
15 -> "rst:15_5" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:15_7" [label=Hintertreffen,
layers="set(['rst', 'rst:token'])",
"rst:token"=Hintertreffen];
15 -> "rst:15_7" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:15_6" [label=ins,
layers="set(['rst', 'rst:token'])",
"rst:token"=ins];
15 -> "rst:15_6" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
16 [label="rst:segment:16",
layers="set(['rst', 'rst:segment'])",
"rst:text"="Die Diskussion , wie teuer die neue Wittstocker Stadthalle für Vereine und Vera\
nstalter wird , hat einige Zeit in Anspruch genommen ."];
"rst:16_7" [label=Wittstocker,
layers="set(['rst', 'rst:token'])",
"rst:token"=Wittstocker];
16 -> "rst:16_7" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:16_20" [label=genommen,
layers="set(['rst', 'rst:token'])",
"rst:token"=genommen];
16 -> "rst:16_20" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:16_5" [label=die,
layers="set(['rst', 'rst:token'])",
"rst:token"=die];
16 -> "rst:16_5" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:16_8" [label=Stadthalle,
layers="set(['rst', 'rst:token'])",
"rst:token"=Stadthalle];
16 -> "rst:16_8" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:16_2" [label=",",
layers="set(['rst', 'rst:token'])",
"rst:token"=","];
16 -> "rst:16_2" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:16_3" [label=wie,
layers="set(['rst', 'rst:token'])",
"rst:token"=wie];
16 -> "rst:16_3" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:16_1" [label=Diskussion,
layers="set(['rst', 'rst:token'])",
"rst:token"=Diskussion];
16 -> "rst:16_1" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:16_4" [label=teuer,
layers="set(['rst', 'rst:token'])",
"rst:token"=teuer];
16 -> "rst:16_4" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:16_6" [label=neue,
layers="set(['rst', 'rst:token'])",
"rst:token"=neue];
16 -> "rst:16_6" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:16_9" [label=für,
layers="set(['rst', 'rst:token'])",
"rst:token"=für];
16 -> "rst:16_9" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:16_12" [label=Veranstalter,
layers="set(['rst', 'rst:token'])",
"rst:token"=Veranstalter];
16 -> "rst:16_12" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:16_21" [label=".",
layers="set(['rst', 'rst:token'])",
"rst:token"="."];
16 -> "rst:16_21" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
16 -> 2 [key=0,
edge_type=dominates,
label="rst:background",
layers="set(['rst', 'rst:relation'])",
relname="rst:background"];
"rst:16_14" [label=",",
layers="set(['rst', 'rst:token'])",
"rst:token"=","];
16 -> "rst:16_14" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:16_0" [label=Die,
layers="set(['rst', 'rst:token'])",
"rst:token"=Die];
16 -> "rst:16_0" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:16_19" [label=Anspruch,
layers="set(['rst', 'rst:token'])",
"rst:token"=Anspruch];
16 -> "rst:16_19" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:16_18" [label=in,
layers="set(['rst', 'rst:token'])",
"rst:token"=in];
16 -> "rst:16_18" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:16_13" [label=wird,
layers="set(['rst', 'rst:token'])",
"rst:token"=wird];
16 -> "rst:16_13" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:16_11" [label=und,
layers="set(['rst', 'rst:token'])",
"rst:token"=und];
16 -> "rst:16_11" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:16_10" [label=Vereine,
layers="set(['rst', 'rst:token'])",
"rst:token"=Vereine];
16 -> "rst:16_10" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:16_17" [label=Zeit,
layers="set(['rst', 'rst:token'])",
"rst:token"=Zeit];
16 -> "rst:16_17" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:16_16" [label=einige,
layers="set(['rst', 'rst:token'])",
"rst:token"=einige];
16 -> "rst:16_16" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:16_15" [label=hat,
layers="set(['rst', 'rst:token'])",
"rst:token"=hat];
16 -> "rst:16_15" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
18 [label="rst:group:span:18",
layers="set(['rst', 'rst:segment'])",
"rst:reltype"=span];
20 [label="rst:group:span:20",
layers="set(['rst', 'rst:segment'])",
"rst:reltype"=span];
18 -> 20 [key=0,
edge_type=dominates,
label="rst:reason",
layers="set(['rst', 'rst:relation'])",
"rst:relname"=reason];
18 -> 4 [key=0,
edge_type=dominates,
label="rst:span",
layers="set(['rst', 'rst:relation'])",
relname="rst:span"];
19 -> 6 [key=0,
edge_type=dominates,
label="rst:span",
layers="set(['rst', 'rst:relation'])",
relname="rst:span"];
20 -> 19 [key=0,
edge_type=dominates,
label="rst:span",
layers="set(['rst', 'rst:relation'])",
"rst:relname"=span];
21 [label="rst:group:span:21",
layers="set(['rst', 'rst:segment'])",
"rst:reltype"=span];
21 -> 9 [key=0,
edge_type=dominates,
label="rst:span",
layers="set(['rst', 'rst:relation'])",
relname="rst:span"];
23 [label="rst:group:span:23",
layers="set(['rst', 'rst:segment'])",
"rst:reltype"=span];
21 -> 23 [key=0,
edge_type=dominates,
label="rst:antithesis",
layers="set(['rst', 'rst:relation'])",
"rst:relname"=antithesis];
22 [label="rst:group:span:22",
layers="set(['rst', 'rst:segment'])",
"rst:reltype"=span];
22 -> 11 [key=0,
edge_type=dominates,
label="rst:evidence",
layers="set(['rst', 'rst:relation'])",
"rst:relname"=evidence];
22 -> 12 [key=0,
edge_type=dominates,
label="rst:span",
layers="set(['rst', 'rst:relation'])",
relname="rst:span"];
23 -> 11 [key=0,
edge_type=dominates,
label="rst:span",
layers="set(['rst', 'rst:relation'])",
relname="rst:span"];
24 [label="rst:group:span:24",
layers="set(['rst', 'rst:segment'])",
"rst:reltype"=span];
30 [label="rst:group:span:30",
layers="set(['rst', 'rst:segment'])",
"rst:reltype"=span];
24 -> 30 [key=0,
edge_type=dominates,
label="rst:interpretation",
layers="set(['rst', 'rst:relation'])",
"rst:relname"=interpretation];
24 -> 14 [key=0,
edge_type=dominates,
label="rst:span",
layers="set(['rst', 'rst:relation'])",
relname="rst:span"];
25 [label="rst:group:span:25",
layers="set(['rst', 'rst:segment'])",
"rst:reltype"=span];
25 -> 23 [key=0,
edge_type=dominates,
label="rst:span",
layers="set(['rst', 'rst:relation'])",
"rst:relname"=span];
26 [label="rst:group:span:26",
layers="set(['rst', 'rst:segment'])",
"rst:reltype"=span];
26 -> 20 [key=0,
edge_type=dominates,
label="rst:span",
layers="set(['rst', 'rst:relation'])",
"rst:relname"=span];
27 [label="rst:group:span:27",
layers="set(['rst', 'rst:segment'])",
"rst:reltype"=span];
27 -> 3 [key=0,
edge_type=dominates,
label="rst:background",
layers="set(['rst', 'rst:relation'])",
"rst:relname"=background];
27 -> 2 [key=0,
edge_type=dominates,
label="rst:span",
layers="set(['rst', 'rst:relation'])",
relname="rst:span"];
28 [label="rst:group:span:28",
layers="set(['rst', 'rst:segment'])",
"rst:reltype"=span];
29 [label="rst:group:multinuc:29",
layers="set(['rst', 'rst:segment'])",
"rst:reltype"=multinuc];
28 -> 29 [key=0,
edge_type=dominates,
label="rst:concession",
layers="set(['rst', 'rst:relation'])",
"rst:relname"=concession];
28 -> 3 [key=0,
edge_type=dominates,
label="rst:span",
layers="set(['rst', 'rst:relation'])",
relname="rst:span"];
29 -> 26 [key=0,
edge_type=dominates,
label="rst:joint",
layers="set(['rst', 'rst:relation'])",
"rst:relname"=joint];
29 -> 25 [key=0,
edge_type=dominates,
label="rst:joint",
layers="set(['rst', 'rst:relation'])",
"rst:relname"=joint];
30 -> 29 [key=0,
edge_type=dominates,
label="rst:span",
layers="set(['rst', 'rst:relation'])",
"rst:relname"=span];
31 [label="rst:root:31",
layers="set(['rst', 'rst:root', 'rst:segment'])",
"rst:reltype"=span];
31 -> 30 [key=0,
edge_type=dominates,
label="rst:span",
layers="set(['rst', 'rst:relation'])",
"rst:relname"=span];
32 [label="rst:segment:32",
layers="set(['rst', 'rst:segment'])",
"rst:text"="desto weniger wird der Stadthaushalt belastet ."];
"rst:32_3" [label=der,
layers="set(['rst', 'rst:token'])",
"rst:token"=der];
32 -> "rst:32_3" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:32_1" [label=weniger,
layers="set(['rst', 'rst:token'])",
"rst:token"=weniger];
32 -> "rst:32_1" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:32_0" [label=desto,
layers="set(['rst', 'rst:token'])",
"rst:token"=desto];
32 -> "rst:32_0" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:32_2" [label=wird,
layers="set(['rst', 'rst:token'])",
"rst:token"=wird];
32 -> "rst:32_2" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:32_5" [label=belastet,
layers="set(['rst', 'rst:token'])",
"rst:token"=belastet];
32 -> "rst:32_5" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:32_4" [label=Stadthaushalt,
layers="set(['rst', 'rst:token'])",
"rst:token"=Stadthaushalt];
32 -> "rst:32_4" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
"rst:32_6" [label=".",
layers="set(['rst', 'rst:token'])",
"rst:token"="."];
32 -> "rst:32_6" [key=0,
edge_type=spans,
layers="set(['rst', 'rst:token'])"];
33 [label="rst:group:multinuc:33",
layers="set(['rst', 'rst:segment'])",
"rst:reltype"=multinuc];
33 -> 7 [key=0,
edge_type=dominates,
label="rst:conjunction",
layers="set(['rst', 'rst:relation'])",
relname="rst:conjunction"];
33 -> 6 [key=0,
edge_type=dominates,
label="rst:reason",
layers="set(['rst', 'rst:relation'])",
"rst:relname"=reason];
33 -> 32 [key=0,
edge_type=dominates,
label="rst:conjunction",
layers="set(['rst', 'rst:relation'])",
relname="rst:conjunction"];
}
